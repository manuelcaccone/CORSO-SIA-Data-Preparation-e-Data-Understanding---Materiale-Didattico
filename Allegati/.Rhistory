install.packages("RMySQL")
library(RMySQL)
con <- dbConnect(RMySQL::MySQL(),
host   = 'db4free.net',
dbname = 'provadbsia',
user     = 'prova_admin',
password      = 'prova_admin',
port     = 3306)
a = mtcars
a
res=DBI::dbListTables(con)
res
res=DBI::dbSendQuery(con,'DESCRIBE claims;')
res=dbFetch(res)
dbClearResult(dbListResults(con)[[1]])
res
res=DBI::dbSendQuery(con,'SELECT ID,
CodAnagrafica AS ID_ANA,
ImportoLiquidato AS Cost
FROM claims
LIMIT 10;')
res=dbFetch(res)
res
View(res)
res=DBI::dbSendQuery(con,'SELECT ID,
CodAnagrafica AS ID_ANA,
ImportoLiquidato AS Cost
FROM claims
ORDER BY ID_ANA DESC
LIMIT 10;')
res=dbFetch(res)
res=DBI::dbSendQuery(con,'SELECT
Descrizione AS Peril,
COUNT(ID) AS N_SX
FROM claims
GROUP BY Peril;')
res=dbFetch(res)
View(res)
res=DBI::dbSendQuery(con,'SELECT ID,
Descrizione AS Peril,
COUNT(*) OVER(PARTITION BY Descrizione) AS N_SX
FROM claims
;')
res=dbFetch(res)
View(res)
res=DBI::dbSendQuery(con,'SELECT t.Peril as Peril,
t.NUM_SX / t.SUMSX AS FREQ_SX
FROM
(
SELECT Descrizione AS Peril, COUNT(ID) AS NUM_SX,
(
SELECT COUNT(ID)
FROM claims
) AS SUMSX
FROM claims
GROUP BY Peril
) t;
')
res=dbFetch(res)
res
res=DBI::dbSendQuery(con,'WITH
s AS (
SELECT DISTINCT IdAnagrafica AS ID_ANA
FROM policies
),
r AS (
SELECT CodAnagrafica AS ID_ANA,
COUNT(ID) AS NUM_SX
FROM claims
GROUP BY ID_ANA
),
t AS (
SELECT s.ID_ANA as ID_POL,
IFNULL(r.NUM_SX,0) AS SX
FROM s LEFT JOIN r ON s.ID_ANA=r.ID_ANA
)
SELECT DISTINCT(SX) AS SINISTRI, COUNT(SX) AS RISCHI_ANNO
FROM t
GROUP BY SINISTRI
ORDER BY SINISTRI;')
res=dbFetch(res)
dbClearResult(dbListResults(con)[[1]])
View(res)
1+1
library(DBI)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = host,
Database = dbname, UID = user, PWD = password, Port = port)
library(RMySQL)
con <- dbConnect(RMySQL::MySQL(),
host   = 'db4free.net',
dbname = 'provadbsia',
user     = 'prova_admin',
password      = 'prova_admin',
port     = 3306)
library(reticulate)
reticulate::repl_python()
py_install("PyMySQL")
py_install("tabulate")
1+1
!pip install PyMySQL
!pip install tabulate
import pymysql
from tabulate import tabulate
import pandas as pd
# Open database connection
db = pymysql.connect(host='db4free.net',
user='prova_admin',
password = "prova_admin",
db='provadbsia')
try:
with db.cursor() as cur:
cur.execute('SELECT * FROM claims')
data = cur.fetchall()
finally:
db.close()
data
data.head()
data = pd.DataFrame(data)
data
num_fields = len(cur.description)
field_names = [i[0] for i in cur.description]
df = pd.DataFrame.from_records(data,columns=field_names)
print(tabulate(df.head(),headers=field_names))
exit
mtcars
View(a)
# importo i dati dal Db
res=DBI::dbSendQuery(con,'SELECT * FROM claims;')
# connessione al DB
library(RMySQL)
con <- dbConnect(RMySQL::MySQL(),
host   = 'db4free.net',
dbname = 'provadbsia',
user     = 'prova_admin',
password      = 'prova_admin',
port     = 3306)
# importo i dati dal Db
res=DBI::dbSendQuery(con,'SELECT * FROM claims;')
res=dbFetch(res)
dbClearResult(dbListResults(con)[[1]])
claims=res
1+1
library(data.table)
A = fread(file.choose())
A
A
library(dplyr)
claims %>%
group_by(peril=Descrizione) %>%
summarize(Mean_Cost=mean(ImportoLiquidato))
claims
str(claims)
claims=data.table(claims)
str(claims)
claims[,Mean_Cost:=mean(ImportoLiquidato),by=.(Peril=Descrizione)]
claims
claims[,Mean_Cost=mean(ImportoLiquidato),by=.(Peril=Descrizione)]
claims[,.(Mean_Cost=mean(ImportoLiquidato)),by=.(Peril=Descrizione)]
claims[,D:=.N]
claims
claims[,.(Equity_Premium=mean(ImportoLiquidato)*length(Descrizione)/unique(D)),by=.(Peril=Descrizione)]
library(sqldf)
install.packages("sqldf")
library(sqldf)
result <- sqldf("SELECT Descrizione AS peril, AVG(ImportoLiquidato) AS Mean_Cost
FROM claims
GROUP BY Descrizione")
knitr::opts_chunk$set(echo = FALSE)
cars
plot(pressure)
